# Generated by Django 2.2.9 on 2020-01-13 22:07

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import users.models.custom_user
import users.models.partner
import users.models.student
import users.models.teacher


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0011_update_proxy_permissions'),
        ('pages', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Создан')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Последнее обновление')),
                ('first_name', models.CharField(max_length=127, verbose_name='Имя')),
                ('last_name', models.CharField(blank=True, max_length=127, verbose_name='Фамилия')),
                ('email', models.EmailField(max_length=255, unique=True, validators=[django.core.validators.EmailValidator()], verbose_name='Email')),
                ('phone_number', models.CharField(max_length=17, unique=True, validators=[django.core.validators.RegexValidator(message="Телефон должен быть в формате: '+79259999999'", regex='^\\+?1?\\d{9,15}$')], verbose_name='Телефонный номер')),
                ('is_student', models.BooleanField(default=False, verbose_name='Студент')),
                ('is_teacher', models.BooleanField(default=False, verbose_name='Преподаватель')),
                ('is_partner', models.BooleanField(default=False, verbose_name='Партнер')),
                ('is_active', models.BooleanField(default=True, verbose_name='Активный')),
                ('is_staff', models.BooleanField(default=False, verbose_name='Сотрудник')),
                ('is_superuser', models.BooleanField(default=False, verbose_name='Админ')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'Пользователь',
                'verbose_name_plural': 'Все пользователи',
                'ordering': ['is_staff'],
            },
            managers=[
                ('objects', users.models.custom_user.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Student',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Создан')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Последнее обновление')),
                ('first_name_lat', models.CharField(blank=True, max_length=127, verbose_name='Имя (латиницей)')),
                ('last_name_lat', models.CharField(blank=True, max_length=127, verbose_name='Фамилия (латиницей)')),
                ('username', models.CharField(blank=True, max_length=127, verbose_name='Имя (в блоге)')),
                ('birth_date', models.DateField(blank=True, verbose_name='Дата рождения')),
                ('country', models.CharField(choices=[('NA', 'Не указано'), ('RU', 'Россия'), ('BY', 'Республика Беларусь'), ('KZ', 'Казахстан'), ('UA', 'Украина')], max_length=2, verbose_name='Страна')),
                ('city', models.CharField(max_length=127, verbose_name='Город')),
                ('sex', models.CharField(choices=[('0', 'Не указано'), ('m', 'Мужской'), ('f', 'Женский')], max_length=1, verbose_name='Пол')),
                ('company', models.CharField(blank=True, max_length=127, verbose_name='Компания')),
                ('position', models.CharField(blank=True, max_length=127, verbose_name='Должность')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, related_name='student', serialize=False, to=settings.AUTH_USER_MODEL, verbose_name='Пользователь')),
                ('avatar', models.ImageField(blank=True, upload_to=users.models.student.upload_avatar_image_dir, validators=[django.core.validators.validate_image_file_extension], verbose_name='Фотография')),
                ('can_relocate', models.BooleanField(verbose_name='Готовность к переезду')),
                ('can_full_time', models.BooleanField(verbose_name='Полный день')),
                ('can_part_time', models.BooleanField(verbose_name='Гибкий график')),
                ('can_remote', models.BooleanField(verbose_name='Удаленно')),
            ],
            options={
                'verbose_name': 'Студент',
                'verbose_name_plural': 'Студенты',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Teacher',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Создан')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Последнее обновление')),
                ('first_name_lat', models.CharField(blank=True, max_length=127, verbose_name='Имя (латиницей)')),
                ('last_name_lat', models.CharField(blank=True, max_length=127, verbose_name='Фамилия (латиницей)')),
                ('username', models.CharField(blank=True, max_length=127, verbose_name='Имя (в блоге)')),
                ('birth_date', models.DateField(blank=True, verbose_name='Дата рождения')),
                ('country', models.CharField(choices=[('NA', 'Не указано'), ('RU', 'Россия'), ('BY', 'Республика Беларусь'), ('KZ', 'Казахстан'), ('UA', 'Украина')], max_length=2, verbose_name='Страна')),
                ('city', models.CharField(max_length=127, verbose_name='Город')),
                ('sex', models.CharField(choices=[('0', 'Не указано'), ('m', 'Мужской'), ('f', 'Женский')], max_length=1, verbose_name='Пол')),
                ('company', models.CharField(blank=True, max_length=127, verbose_name='Компания')),
                ('position', models.CharField(blank=True, max_length=127, verbose_name='Должность')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, related_name='teacher', serialize=False, to=settings.AUTH_USER_MODEL, verbose_name='Пользователь')),
                ('avatar', models.ImageField(blank=True, upload_to=users.models.teacher.upload_avatar_image_dir, validators=[django.core.validators.validate_image_file_extension], verbose_name='Фотография')),
                ('bio', models.TextField(blank=True, max_length=500, verbose_name='О себе')),
            ],
            options={
                'verbose_name': 'Преподаватель',
                'verbose_name_plural': 'Преподаватели',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Partner',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Создан')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Последнее обновление')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, related_name='partner', serialize=False, to=settings.AUTH_USER_MODEL, verbose_name='Пользователь')),
                ('logo', models.ImageField(blank=True, upload_to=users.models.partner.upload_logo_image_dir, validators=[django.core.validators.validate_image_file_extension], verbose_name='Логотип компании')),
                ('company', models.CharField(max_length=127, verbose_name='Название компании')),
                ('info', models.TextField(blank=True, max_length=500, verbose_name='О компании')),
                ('courses', models.ManyToManyField(blank=True, to='pages.Course', verbose_name='Выпусники каких курсов интересуют')),
            ],
            options={
                'verbose_name': 'Партнер',
                'verbose_name_plural': 'Партнеры',
                'ordering': ['company'],
            },
        ),
    ]
